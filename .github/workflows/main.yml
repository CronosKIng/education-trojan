name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Validate project structure
      run: |
        echo "🔍 Validating project structure..."
        [ -f "build.gradle" ] || [ -f "app/build.gradle" ] && echo "✅ Gradle build file found" || echo "❌ No Gradle build file found"
        [ -f "gradlew" ] && echo "✅ Gradle wrapper found" || echo "❌ Gradle wrapper missing"
        [ -d "app/src/main" ] && echo "✅ Source directory exists" || echo "❌ Source directory missing"
        
    - name: Build APK
      run: |
        echo "🔨 Building Android APK..."
        ./gradlew clean assemble${{ github.event.inputs.build_type || 'Release' }}
        echo "✅ Build completed successfully!"
        
    - name: Find and list APK files
      run: |
        echo "📱 Generated APK files:"
        find . -name "*.apk" -type f | while read file; do
          echo "📍 $file ($(du -h "$file" | cut -f1))"
        done
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ github.event.inputs.build_type || 'release' }}
        path: |
          **/*.apk
          **/outputs/apk/
        retention-days: 30
        if-no-files-found: warn
        
    - name: Generate build info
      run: |
        echo "📊 BUILD INFORMATION" > build-info.md
        echo "===================" >> build-info.md
        echo "" >> build-info.md
        echo "**Repository:** $GITHUB_REPOSITORY" >> build-info.md
        echo "**Commit:** $GITHUB_SHA" >> build-info.md
        echo "**Build Date:** $(date -u)" >> build-info.md
        echo "**Build Type:** ${{ github.event.inputs.build_type || 'release' }}" >> build-info.md
        echo "" >> build-info.md
        echo "## Generated APK Files" >> build-info.md
        echo '```' >> build-info.md
        find . -name "*.apk" -type f >> build-info.md
        echo '```' >> build-info.md
        
    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-information
        path: build-info.md
        retention-days: 30
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Security validation
      run: |
        echo "🔒 SECURITY VALIDATION REPORT"
        echo "============================"
        echo ""
        echo "✅ PROJECT TYPE: Educational"
        echo "✅ PURPOSE: Security Awareness"
        echo "✅ INTENDED USE: Academic Research"
        echo ""
        echo "⚠️  LEGAL DISCLAIMER:"
        echo "This project is for educational purposes only."
        echo "Use only on devices you own or have explicit permission to test."
        echo "The authors are not responsible for any misuse."
        echo ""
        echo "📚 EDUCATIONAL OBJECTIVES:"
        echo "• Demonstrate Android security concepts"
        echo "• Show malware behavior patterns"
        echo "• Teach defensive security measures"
        echo "• Raise security awareness"
        
    - name: Code analysis
      run: |
        echo "📝 CODE ANALYSIS SUMMARY"
        echo "======================="
        echo ""
        echo "Java files found: $(find . -name "*.java" -type f | wc -l)"
        echo "XML files found: $(find . -name "*.xml" -type f | wc -l)"
        echo "Gradle files found: $(find . -name "*.gradle" -type f | wc -l)"
        echo ""
        echo "📁 Project structure appears valid for Android development"
        
  documentation:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create educational documentation
      run: |
        cat > EDUCATIONAL_PURPOSE.md << 'DOC'
        # Educational Purpose Documentation
        
        ## Project Overview
        This Android application demonstrates security concepts for educational purposes.
        
        ## Learning Objectives
        - Understand Android security mechanisms
        - Learn about potential vulnerabilities
        - Develop defensive coding practices
        - Enhance security awareness
        
        ## Intended Usage
        - Academic research
        - Security education
        - Penetration testing training
        - Cybersecurity awareness
        
        ## Legal and Ethical Guidelines
        - Use only with proper authorization
        - Do not use for malicious purposes
        - Respect privacy and laws
        - Report vulnerabilities responsibly
        
        ## Build Instructions
        ```bash
        ./gradlew assembleRelease
        ```
        
        ## Disclaimer
        This tool is provided for educational purposes only.
        Users assume all responsibility for legal and ethical use.
        DOC
        
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: educational-docs
        path: |
          EDUCATIONAL_PURPOSE.md
          README.md
        retention-days: 30

  notify:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: [build, security-scan, documentation]
    if: always()
    
    steps:
    - name: Build status summary
      run: |
        echo "🏁 BUILD PIPELINE COMPLETED"
        echo "==========================="
        echo ""
        echo "📱 Android APK: ${{ needs.build.result }}"
        echo "🔒 Security Scan: ${{ needs.security-scan.result }}"
        echo "📚 Documentation: ${{ needs.documentation.result }}"
        echo ""
        if [ "${{ needs.build.result }}" == "success" ]; then
          echo "✅ APK built successfully"
          echo "📥 Download from GitHub Actions artifacts"
        else
          echo "❌ APK build failed"
          echo "🔧 Check build logs for details"
        fi
        echo ""
        echo "🎯 Educational project ready for use"
