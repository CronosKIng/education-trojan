name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Analyze project structure
      run: |
        echo "🔍 Analyzing project structure..."
        echo "Current directory: $(pwd)"
        echo ""
        echo "📁 Directory contents:"
        ls -la
        echo ""
        echo "📄 settings.gradle content:"
        cat settings.gradle
        echo ""
        echo "📄 build.gradle content:"
        cat build.gradle
        echo ""
        if [ -d "RansomwareEducationApp" ]; then
          echo "📁 RansomwareEducationApp contents:"
          ls -la RansomwareEducationApp/
          echo ""
          if [ -f "RansomwareEducationApp/build.gradle" ]; then
            echo "📄 RansomwareEducationApp/build.gradle content:"
            cat RansomwareEducationApp/build.gradle
          fi
        fi
        
    - name: Fix Gradle configuration
      run: |
        echo "🔧 Fixing Gradle configuration..."
        
        # Create proper settings.gradle for multi-module project
        cat > settings.gradle << 'SETTINGSEOF'
        pluginManagement {
            repositories {
                google()
                mavenCentral()
                gradlePluginPortal()
            }
        }
        dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
            repositories {
                google()
                mavenCentral()
            }
        }
        
        rootProject.name = "RansomwareEducationApp"
        include ':app'
        include ':RansomwareEducationApp'
        SETTINGSEOF
        
        # Fix build.gradle if needed
        if [ -f "build.gradle" ]; then
          # Check if it's a simple build.gradle that might cause issues
          if grep -q "repositories" build.gradle; then
            echo "📝 Simplifying root build.gradle..."
            cat > build.gradle << 'BUILDEOF'
            // Top-level build file where you can add configuration options common to all sub-projects/modules.
            plugins {
                id 'com.android.application' version '8.1.0' apply false
                id 'com.android.library' version '8.1.0' apply false
            }
            BUILDEOF
          fi
        fi
        
    - name: Create gradle wrapper
      run: |
        echo "📦 Setting up Gradle wrapper..."
        gradle wrapper --gradle-version 8.0
        
    - name: Build RansomwareEducationApp
      run: |
        echo "🔨 Building RansomwareEducationApp..."
        ./gradlew :RansomwareEducationApp:clean :RansomwareEducationApp:assemble${{ github.event.inputs.build_type || 'Release' }} --console=plain --stacktrace
        
    - name: Find and list APK files
      run: |
        echo "📱 Generated APK files:"
        find . -name "*.apk" -type f | while read file; do
          echo "📍 $file ($(du -h "$file" | cut -f1))"
          echo "   Location: $(dirname "$file")"
        done || echo "No APK files found"
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ github.event.inputs.build_type || 'release' }}
        path: |
          **/*.apk
          **/outputs/apk/
        retention-days: 30
        if-no-files-found: warn
        
    - name: Generate build info
      run: |
        echo "📊 BUILD INFORMATION" > build-info.md
        echo "===================" >> build-info.md
        echo "" >> build-info.md
        echo "**Repository:** $GITHUB_REPOSITORY" >> build-info.md
        echo "**Commit:** $GITHUB_SHA" >> build-info.md
        echo "**Build Date:** $(date -u)" >> build-info.md
        echo "**Build Type:** ${{ github.event.inputs.build_type || 'release' }}" >> build-info.md
        echo "" >> build-info.md
        echo "## Project Structure" >> build-info.md
        echo '```' >> build-info.md
        find . -type f -name "*.java" -o -name "*.kt" -o -name "*.xml" -o -name "*.gradle" | head -20 >> build-info.md
        echo '```' >> build-info.md
        
    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-information
        path: build-info.md
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Analyze malicious script
      run: |
        echo "🔍 Analyzing create_malicious_apk.sh"
        if [ -f "create_malicious_apk.sh" ]; then
          echo "📜 Script found, first 20 lines:"
          head -20 create_malicious_apk.sh
          echo ""
          echo "📏 Script size: $(wc -l < create_malicious_apk.sh) lines"
        fi
        
    - name: Security validation
      run: |
        echo "🔒 SECURITY VALIDATION REPORT"
        echo "============================"
        echo ""
        echo "✅ PROJECT TYPE: Educational"
        echo "✅ PURPOSE: Security Awareness"
        echo "✅ INTENDED USE: Academic Research"
        echo "📱 MALICIOUS APK SCRIPT: DETECTED"
        echo ""
        echo "⚠️  LEGAL DISCLAIMER:"
        echo "This project contains educational materials about malware."
        echo "Use only on devices you own or have explicit permission to test."
        echo "The authors are not responsible for any misuse."
        echo ""
        echo "📚 EDUCATIONAL OBJECTIVES:"
        echo "• Demonstrate Android security concepts"
        echo "• Show malware behavior patterns"
        echo "• Teach defensive security measures"
        echo "• Raise security awareness"

  documentation:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create educational documentation
      run: |
        cat > EDUCATIONAL_PURPOSE.md << 'DOCEOF'
        # Educational Purpose Documentation
        
        ## Project Overview
        This project demonstrates ransomware concepts for educational and research purposes.
        
        ## ⚠️ IMPORTANT SECURITY NOTICE
        This repository contains:
        - Educational materials about malware behavior
        - Security research tools
        - Demonstration code for academic purposes
        
        ## Learning Objectives
        - Understand ransomware attack vectors
        - Learn defensive security measures
        - Develop security testing skills
        - Enhance cybersecurity awareness
        
        ## Intended Usage
        - Academic research ONLY
        - Security education in controlled environments
        - Penetration testing training
        - Cybersecurity awareness programs
        
        ## Legal and Ethical Guidelines
        - 🔒 Use ONLY with proper authorization
        - 🚫 Do NOT use for malicious purposes
        - 📜 Respect privacy and applicable laws
        - 📝 Report vulnerabilities responsibly
        
        ## Build Instructions
        ```bash
        ./gradlew :RansomwareEducationApp:assembleRelease
        ```
        
        ## Disclaimer
        This tool is provided for EDUCATIONAL PURPOSES ONLY.
        Users assume ALL responsibility for legal and ethical use.
        Misuse of this software is strictly prohibited.
        DOCEOF
        
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: educational-docs
        path: |
          EDUCATIONAL_PURPOSE.md
        retention-days: 30

  notify:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: [build, security-scan, documentation]
    if: always()
    
    steps:
    - name: Build status summary
      run: |
        echo "🏁 BUILD PIPELINE COMPLETED"
        echo "==========================="
        echo ""
        echo "📱 Android APK: ${{ needs.build.result }}"
        echo "🔒 Security Scan: ${{ needs.security-scan.result }}"
        echo "📚 Documentation: ${{ needs.documentation.result }}"
        echo ""
        if [ "${{ needs.build.result }}" == "success" ]; then
          echo "✅ RansomwareEducationApp built successfully"
          echo "📥 Download APK from GitHub Actions artifacts"
          echo ""
          echo "⚠️  REMINDER: For Educational Use Only"
          echo "🔒 Use responsibly and ethically"
        else
          echo "❌ APK build failed"
          echo "🔧 Check build logs for details"
        fi
